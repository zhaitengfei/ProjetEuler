package tzhai.euler;

import java.util.ArrayList;

import tzhai.euler.lib.MathLib;

/**
 * Problem 12 Highly divisible triangular number
 * 
 * The sequence of triangle numbers is generated by adding the natural numbers.
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first
 * ten terms would be:
 * 
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * 
 * Let us list the factors of the first seven triangle numbers:
 * 
 * 1: 1 3: 1,3 6: 1,2,3,6 10: 1,2,5,10 15: 1,3,5,15 21: 1,3,7,21 28:
 * 1,2,4,7,14,28 We can see that 28 is the first triangle number to have over
 * five divisors.
 * 
 * What is the value of the first triangle number to have over five hundred
 * divisors?
 * 
 * @author Zhai Tengfei
 *
 */

public class Problem12 {
	// calculate the numbers of the divisors
	private static int nbDivisors(long a) {
		int nb = 0;
		for (int i = 1; i < Math.sqrt(a) ; i++) {
			if (a % i == 0) {
				nb += 2;
			}
		}
		if (MathLib.isSquare(a)) {
			nb++;
		}
		return nb;
	}
	
	private static long firstTriangle(int maxDivisors) {
		int a = 0;
		int nb = 0;
		int addNb = 1;
		while (nb <= maxDivisors) {
			a += addNb;
			nb = Problem12.nbDivisors(a);
			addNb++;
		}
		return a;
	}
	
	public static void main(String[] args) {
		System.out.println(Problem12.firstTriangle(500));
	}

	
}
